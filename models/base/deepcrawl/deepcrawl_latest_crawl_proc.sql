
SELECT DISTINCT * 
FROM (

    SELECT 
    domain,
    eventid,
    url,
    crawl_id,
    RANK () over (PARTITION BY domain, url, crawl_report_month ORDER BY crawl_id desc) as rank_crawl,
    RANK () over (PARTITION BY crawl_id, domain, url, crawl_report_month ORDER BY eventid asc) as rank_event,
    primary_url,
    canonical_url,  
    crawl_datetime,  
    crawl_date,
    crawl_month,
    crawl_report_month,
    found_at_sitemap,
    http_status_code,
    level,
    schema_type,
    header_content_type,
    word_count, 
    page_title,
    page_title_length,
    description,
    description_length,
    indexable,
    robots_noindex,
    meta_noindex,
    is_self_canonical,
    backlink_count,
    backlink_domain_count,
    redirected_to_url,
    found_at_url,
    rel_next_url,
    rel_prev_url,
    links_in_count,
    links_out_count,
    external_links_count,
    internal_links_count,
    h1_tag,
    h2_tag,
    redirect_chain,
    redirected_to_status_code,
    is_redirect_loop,
    duplicate_page,
    duplicate_page_count,
    duplicate_body,
    duplicate_body_count,
    form_submit,
    infinite_scroll,
    decimal_price,
    currency_price,
    google_maps,
    add_to_cart,
    learn_more,
    review,
    size,
    paginated_page     
    FROM 
     ( 
        --  SELECT 
        -- Crawl_id as crawl_id,
        -- regexp_extract(Url,r'^(?:https?:\/\/)?(?:www\.)?([^\/]+)') as domain,
        -- EventId as eventid,
        -- Crawl_Datetime as crawl_datetime,  
        -- cast(Crawl_Datetime as date) crawl_date,
        -- DATE_TRUNC(date( Crawl_Datetime ), month) as crawl_month,
        -- CASE WHEN extract(DAY from Crawl_Datetime) >= 15 THEN DATE_TRUNC(date( Crawl_Datetime ), month) ELSE date_sub(DATE_TRUNC(date( Crawl_Datetime ), month), INTERVAL 1 MONTH) END as crawl_report_month,
        -- Url as url,
        -- Primary_Url as primary_url,
        -- Canonical_Url as canonical_url,  
        -- Found_At_Sitemap as found_at_sitemap,
        -- Http_Status_Code as http_status_code,
        -- Level as level,
        -- Schema_Type as schema_type,
        -- Header_Content_Type as header_content_type,
        -- Word_Count as word_count, 
        -- Page_Title as page_title,
        -- Page_Title_Length as page_title_length,
        -- Description as description,
        -- Description_Length as description_length,
        -- Indexable as indexable,
        -- Robots_Noindex as robots_noindex,
        -- Meta_Noindex as meta_noindex,
        -- Is_Self_Canonical as is_self_canonical,
        -- Backlink_Count as  backlink_count,
        -- Backlink_Domain_Count as backlink_domain_count,
        -- Redirected_To_Url as redirected_to_url,
        -- Found_At_Url as found_at_url,
        -- Rel_Next_Url as rel_next_url,
        -- Rel_Prev_Url as rel_prev_url,
        -- Links_In_Count as links_in_count,
        -- Links_Out_Count as links_out_count,
        -- External_Links_Count as external_links_count,
        -- Internal_Links_Count as internal_links_count,
        -- H1_Tag as h1_tag,
        -- H2_Tag as h2_tag, 
        -- Redirect_Chain as redirect_chain,
        -- Redirected_To_Status_Code as redirected_to_status_code,
        -- Is_Redirect_Loop as is_redirect_loop,
        -- Duplicate_Page as duplicate_page,
        -- Duplicate_Page_Count as duplicate_page_count,
        -- Duplicate_Body as duplicate_body,
        -- Duplicate_Body_Count as duplicate_body_count,
        -- Form_Submit as form_submit,
        -- Infinite_Scroll as infinite_scroll,
        -- Decimal_Price as decimal_price,
        -- Currency_Price as currency_price,
        -- Google_Maps as google_maps,
        -- Add_To_Cart as add_to_cart,
        -- Learn_More as learn_more,
        -- Review as review,
        -- Size as size,
        -- Paginated_Page as paginated_page    
        -- FROM 
        --  `seo-data-pipeline-89.raw.deepcrawl`

        -- UNION ALL

        SELECT 
        crawl_id,
        regexp_extract(url,r'^(?:https?:\/\/)?(?:www\.)?([^\/]+)') as domain,
        1 as eventid,
        cast(crawl_datetime as timestamp) crawl_datetime, 
        cast(crawl_datetime as date) crawl_date,
        DATE_TRUNC(date( crawl_datetime ), month) as crawl_month,
        CASE WHEN extract(DAY from crawl_datetime) >= 15 THEN DATE_TRUNC(date( crawl_datetime ), month) ELSE date_sub(DATE_TRUNC(date( crawl_datetime ), month), INTERVAL 1 MONTH) END as crawl_report_month,
        url,
        primary_url,
        canonical_url,  
        found_at_sitemap,
        http_status_code,
        level,
        custom_extraction_7 schema_type,
        header_content_type,
        word_count, 
        page_title,
        page_title_length,
        description,
        description_length,
        indexable,
        robots_noindex,
        meta_noindex,
        is_self_canonical,
        CAST(backlink_count as int64) as backlink_count,
        CAST(backlink_domain_count AS int64) as backlink_domain_count,
        redirected_to_url,
        found_at_url,
        rel_next_url,
        rel_prev_url,
        links_in_count,
        links_out_count,
        external_links_count,
        internal_links_count,
        h1_tag,
        h2_tag,
        redirect_chain,
        redirected_to_status_code,
        is_redirect_loop,
        duplicate_page,
        duplicate_page_count,
        duplicate_body,
        duplicate_body_count,
        custom_extraction_10 as form_submit, -- qt_form_submit form_submit,
        custom_extraction_11 as infinite_scroll, -- qt_infinite_scroll infinite_scroll,
        custom_extraction_4 as decimal_price,
        custom_extraction_3 as currency_price,
        custom_extraction_12 google_maps, -- qt_google_maps google_maps,
        custom_extraction_2 add_to_cart, -- add_to_cart,
        custom_extraction_6 learn_more, -- learn_more,
        custom_extraction_5 review, -- review,
        custom_extraction_8 size, -- size,      
        paginated_page     
        FROM 
        {{ source('bq_sources', 'deepcrawl') }}  
     )
)

WHERE rank_crawl = 1 and rank_event =1

